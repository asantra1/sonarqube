---
# Source: sonarqube-integration/charts/postgresql/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: RELEASE-NAME-postgresql
  labels:
    helm.sh/chart: postgresql-0.1.0
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: sonarqube-integration/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sonarqube
  labels:
    helm.sh/chart: sonarqube-integration-0.1.0
    app.kubernetes.io/name: sonarqube-integration
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: sonarqube-integration/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: sonarsecret
type: Opaque
data:
  JDBC_USERNAME: c29uYXIK
  JDBC_PASSWORD: c29uYXJwYXNzd2QK
---
# Source: sonarqube-integration/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonar
data:
  SONARQUBE_JDBC_URL: "jdbc:postgresql://postgresql:5432/sonar"
---
# Source: sonarqube-integration/charts/postgresql/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-postgresql
  labels:
    helm.sh/chart: postgresql-0.1.0
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 5324
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: sonarqube-integration/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-sonarqube-integration
  labels:
    helm.sh/chart: sonarqube-integration-0.1.0
    app.kubernetes.io/name: sonarqube-integration
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: http1
      protocol: TCP
      name: http1
    - port: 9092
      targetPort: http2
      protocol: TCP
      name: http2
  selector:
    app.kubernetes.io/name: sonarqube-integration
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: sonarqube-integration/charts/postgresql/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: RELEASE-NAME-postgresql
  labels:
    helm.sh/chart: postgresql-0.1.0
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/instance: RELEASE-NAME
    spec:
      serviceAccountName: RELEASE-NAME-postgresql
      securityContext:
        {}
      containers:
        - name: postgresql
          securityContext:
            {}
          image: "postgres:9.6:1.16.0"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredata 
          ports:
            - name: http
              containerPort: 5432
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: sonarsecret
                  key: JDBC_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sonarsecret
                  key: JDBC_PASSWORD
      volumes:
        - name: postgredata
          hostPath:
            # directory location on host
            path: /var/postgres-data
            # this field is optional
            type: Directory
---
# Source: sonarqube-integration/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: RELEASE-NAME-sonarqube-integration
  labels:
    helm.sh/chart: sonarqube-integration-0.1.0
    app.kubernetes.io/name: sonarqube-integration
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sonarqube-integration
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sonarqube-integration
        app.kubernetes.io/instance: RELEASE-NAME
    spec:
      serviceAccountName: sonarqube
      securityContext:
        {}
      containers:
        - name: sonarqube-integration
          securityContext:
            {}
          image: "sonarqube:lts:1.16.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http1
              containerPort: 9000
              protocol: TCP
            - name: http2
              containerPort: 9092
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          env:
            - name: SONARQUBE_JDBC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: sonarsecret
                  key: JDBC_USERNAME
            - name: SONARQUBE_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sonarsecret
                  key: JDBC_PASSWORD
            - name: SONARQUBE_JDBC_URL
              valueFrom:
                configMapKeyRef:
                  name: sonar
                  key: SONARQUBE_JDBC_URL
---
# Source: sonarqube-integration/charts/postgresql/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "RELEASE-NAME-postgresql-test-connection"
  labels:
    helm.sh/chart: postgresql-0.1.0
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['RELEASE-NAME-postgresql:5324']
  restartPolicy: Never
---
# Source: sonarqube-integration/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "RELEASE-NAME-sonarqube-integration-test-connection"
  labels:
    helm.sh/chart: sonarqube-integration-0.1.0
    app.kubernetes.io/name: sonarqube-integration
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['RELEASE-NAME-sonarqube-integration:']
  restartPolicy: Never
